// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WidevineCencHeaderProto.proto
package com.google.protobuf.object;

public final class WidevineCencHeaderProto {
  private WidevineCencHeaderProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WidevineCencHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WidevineCencHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
     */
    boolean hasAlgorithm();
    /**
     * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
     */
    WidevineCencHeaderProto.WidevineCencHeader.Algorithm getAlgorithm();

    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getKeyIdList();
    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    int getKeyIdCount();
    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    com.google.protobuf.ByteString getKeyId(int index);

    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>optional string provider = 3;</code>
     */
    boolean hasProvider();
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>optional string provider = 3;</code>
     */
    java.lang.String getProvider();
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>optional string provider = 3;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <pre>
     * A content identifier, specified by content provider.
     * </pre>
     *
     * <code>optional bytes content_id = 4;</code>
     */
    boolean hasContentId();
    /**
     * <pre>
     * A content identifier, specified by content provider.
     * </pre>
     *
     * <code>optional bytes content_id = 4;</code>
     */
    com.google.protobuf.ByteString getContentId();

    /**
     * <pre>
     * Track type. Acceptable values are SD, HD and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>optional string track_type_deprecated = 5;</code>
     */
    boolean hasTrackTypeDeprecated();
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>optional string track_type_deprecated = 5;</code>
     */
    java.lang.String getTrackTypeDeprecated();
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>optional string track_type_deprecated = 5;</code>
     */
    com.google.protobuf.ByteString
        getTrackTypeDeprecatedBytes();

    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>optional string policy = 6;</code>
     */
    boolean hasPolicy();
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>optional string policy = 6;</code>
     */
    java.lang.String getPolicy();
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>optional string policy = 6;</code>
     */
    com.google.protobuf.ByteString
        getPolicyBytes();

    /**
     * <pre>
     *Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>optional uint32 crypto_period_index = 7;</code>
     */
    boolean hasCryptoPeriodIndex();
    /**
     * <pre>
     *Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>optional uint32 crypto_period_index = 7;</code>
     */
    int getCryptoPeriodIndex();

    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>optional bytes grouped_license = 8;</code>
     */
    boolean hasGroupedLicense();
    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>optional bytes grouped_license = 8;</code>
     */
    com.google.protobuf.ByteString getGroupedLicense();

    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
     * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
     * </pre>
     *
     * <code>optional uint32 protection_scheme = 9;</code>
     */
    boolean hasProtectionScheme();
    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
     * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
     * </pre>
     *
     * <code>optional uint32 protection_scheme = 9;</code>
     */
    int getProtectionScheme();

    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>optional uint32 crypto_period_seconds = 10;</code>
     */
    boolean hasCryptoPeriodSeconds();
    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>optional uint32 crypto_period_seconds = 10;</code>
     */
    int getCryptoPeriodSeconds();
  }
  /**
   * Protobuf type {@code WidevineCencHeader}
   */
  public  static final class WidevineCencHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:WidevineCencHeader)
      WidevineCencHeaderOrBuilder {
    // Use WidevineCencHeader.newBuilder() to construct.
    private WidevineCencHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WidevineCencHeader() {
      algorithm_ = 0;
      keyId_ = java.util.Collections.emptyList();
      provider_ = "";
      contentId_ = com.google.protobuf.ByteString.EMPTY;
      trackTypeDeprecated_ = "";
      policy_ = "";
      cryptoPeriodIndex_ = 0;
      groupedLicense_ = com.google.protobuf.ByteString.EMPTY;
      protectionScheme_ = 0;
      cryptoPeriodSeconds_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WidevineCencHeaderProto.internal_static_WidevineCencHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WidevineCencHeaderProto.internal_static_WidevineCencHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WidevineCencHeaderProto.WidevineCencHeader.class, WidevineCencHeaderProto.WidevineCencHeader.Builder.class);
    }

    /**
     * Protobuf enum {@code WidevineCencHeader.Algorithm}
     */
    public enum Algorithm
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNENCRYPTED = 0;</code>
       */
      UNENCRYPTED(0),
      /**
       * <code>AESCTR = 1;</code>
       */
      AESCTR(1),
      ;

      /**
       * <code>UNENCRYPTED = 0;</code>
       */
      public static final int UNENCRYPTED_VALUE = 0;
      /**
       * <code>AESCTR = 1;</code>
       */
      public static final int AESCTR_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Algorithm valueOf(int value) {
        return forNumber(value);
      }

      public static Algorithm forNumber(int value) {
        switch (value) {
          case 0: return UNENCRYPTED;
          case 1: return AESCTR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Algorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Algorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Algorithm>() {
              public Algorithm findValueByNumber(int number) {
                return Algorithm.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return WidevineCencHeaderProto.WidevineCencHeader.getDescriptor().getEnumTypes().get(0);
      }

      private static final Algorithm[] VALUES = values();

      public static Algorithm valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Algorithm(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:WidevineCencHeader.Algorithm)
    }

    private int bitField0_;
    public static final int ALGORITHM_FIELD_NUMBER = 1;
    private int algorithm_;
    /**
     * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
     */
    public boolean hasAlgorithm() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
     */
    public WidevineCencHeaderProto.WidevineCencHeader.Algorithm getAlgorithm() {
      WidevineCencHeaderProto.WidevineCencHeader.Algorithm result = WidevineCencHeaderProto.WidevineCencHeader.Algorithm.valueOf(algorithm_);
      return result == null ? WidevineCencHeaderProto.WidevineCencHeader.Algorithm.UNENCRYPTED : result;
    }

    public static final int KEY_ID_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> keyId_;
    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getKeyIdList() {
      return keyId_;
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    public int getKeyIdCount() {
      return keyId_.size();
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    public com.google.protobuf.ByteString getKeyId(int index) {
      return keyId_.get(index);
    }

    public static final int PROVIDER_FIELD_NUMBER = 3;
    private volatile java.lang.Object provider_;
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>optional string provider = 3;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>optional string provider = 3;</code>
     */
    public java.lang.String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          provider_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>optional string provider = 3;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENT_ID_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString contentId_;
    /**
     * <pre>
     * A content identifier, specified by content provider.
     * </pre>
     *
     * <code>optional bytes content_id = 4;</code>
     */
    public boolean hasContentId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * A content identifier, specified by content provider.
     * </pre>
     *
     * <code>optional bytes content_id = 4;</code>
     */
    public com.google.protobuf.ByteString getContentId() {
      return contentId_;
    }

    public static final int TRACK_TYPE_DEPRECATED_FIELD_NUMBER = 5;
    private volatile java.lang.Object trackTypeDeprecated_;
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>optional string track_type_deprecated = 5;</code>
     */
    public boolean hasTrackTypeDeprecated() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>optional string track_type_deprecated = 5;</code>
     */
    public java.lang.String getTrackTypeDeprecated() {
      java.lang.Object ref = trackTypeDeprecated_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          trackTypeDeprecated_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>optional string track_type_deprecated = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTrackTypeDeprecatedBytes() {
      java.lang.Object ref = trackTypeDeprecated_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trackTypeDeprecated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POLICY_FIELD_NUMBER = 6;
    private volatile java.lang.Object policy_;
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>optional string policy = 6;</code>
     */
    public boolean hasPolicy() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>optional string policy = 6;</code>
     */
    public java.lang.String getPolicy() {
      java.lang.Object ref = policy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          policy_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>optional string policy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPolicyBytes() {
      java.lang.Object ref = policy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CRYPTO_PERIOD_INDEX_FIELD_NUMBER = 7;
    private int cryptoPeriodIndex_;
    /**
     * <pre>
     *Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>optional uint32 crypto_period_index = 7;</code>
     */
    public boolean hasCryptoPeriodIndex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>optional uint32 crypto_period_index = 7;</code>
     */
    public int getCryptoPeriodIndex() {
      return cryptoPeriodIndex_;
    }

    public static final int GROUPED_LICENSE_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString groupedLicense_;
    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>optional bytes grouped_license = 8;</code>
     */
    public boolean hasGroupedLicense() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>optional bytes grouped_license = 8;</code>
     */
    public com.google.protobuf.ByteString getGroupedLicense() {
      return groupedLicense_;
    }

    public static final int PROTECTION_SCHEME_FIELD_NUMBER = 9;
    private int protectionScheme_;
    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
     * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
     * </pre>
     *
     * <code>optional uint32 protection_scheme = 9;</code>
     */
    public boolean hasProtectionScheme() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
     * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
     * </pre>
     *
     * <code>optional uint32 protection_scheme = 9;</code>
     */
    public int getProtectionScheme() {
      return protectionScheme_;
    }

    public static final int CRYPTO_PERIOD_SECONDS_FIELD_NUMBER = 10;
    private int cryptoPeriodSeconds_;
    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>optional uint32 crypto_period_seconds = 10;</code>
     */
    public boolean hasCryptoPeriodSeconds() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>optional uint32 crypto_period_seconds = 10;</code>
     */
    public int getCryptoPeriodSeconds() {
      return cryptoPeriodSeconds_;
    }

    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static WidevineCencHeaderProto.WidevineCencHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WidevineCencHeaderProto.WidevineCencHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WidevineCencHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WidevineCencHeader)
        WidevineCencHeaderProto.WidevineCencHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WidevineCencHeaderProto.internal_static_WidevineCencHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WidevineCencHeaderProto.internal_static_WidevineCencHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                WidevineCencHeaderProto.WidevineCencHeader.class, WidevineCencHeaderProto.WidevineCencHeader.Builder.class);
      }

      // Construct using WidevineCencHeaderProto.WidevineCencHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        algorithm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        contentId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        trackTypeDeprecated_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        policy_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        cryptoPeriodIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        groupedLicense_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        protectionScheme_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        cryptoPeriodSeconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WidevineCencHeaderProto.internal_static_WidevineCencHeader_descriptor;
      }

      public WidevineCencHeaderProto.WidevineCencHeader getDefaultInstanceForType() {
        return WidevineCencHeaderProto.WidevineCencHeader.getDefaultInstance();
      }

      public WidevineCencHeaderProto.WidevineCencHeader build() {
        WidevineCencHeaderProto.WidevineCencHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public WidevineCencHeaderProto.WidevineCencHeader buildPartial() {
        WidevineCencHeaderProto.WidevineCencHeader result = new WidevineCencHeaderProto.WidevineCencHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.algorithm_ = algorithm_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          keyId_ = java.util.Collections.unmodifiableList(keyId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.contentId_ = contentId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.trackTypeDeprecated_ = trackTypeDeprecated_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.policy_ = policy_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cryptoPeriodIndex_ = cryptoPeriodIndex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.groupedLicense_ = groupedLicense_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.protectionScheme_ = protectionScheme_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.cryptoPeriodSeconds_ = cryptoPeriodSeconds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private int algorithm_ = 0;
      /**
       * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
       */
      public boolean hasAlgorithm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
       */
      public WidevineCencHeaderProto.WidevineCencHeader.Algorithm getAlgorithm() {
        WidevineCencHeaderProto.WidevineCencHeader.Algorithm result = WidevineCencHeaderProto.WidevineCencHeader.Algorithm.valueOf(algorithm_);
        return result == null ? WidevineCencHeaderProto.WidevineCencHeader.Algorithm.UNENCRYPTED : result;
      }
      /**
       * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
       */
      public Builder setAlgorithm(WidevineCencHeaderProto.WidevineCencHeader.Algorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        algorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .WidevineCencHeader.Algorithm algorithm = 1;</code>
       */
      public Builder clearAlgorithm() {
        bitField0_ = (bitField0_ & ~0x00000001);
        algorithm_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> keyId_ = java.util.Collections.emptyList();
      private void ensureKeyIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          keyId_ = new java.util.ArrayList<com.google.protobuf.ByteString>(keyId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getKeyIdList() {
        return java.util.Collections.unmodifiableList(keyId_);
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public int getKeyIdCount() {
        return keyId_.size();
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public com.google.protobuf.ByteString getKeyId(int index) {
        return keyId_.get(index);
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public Builder setKeyId(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIdIsMutable();
        keyId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public Builder addKeyId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIdIsMutable();
        keyId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public Builder addAllKeyId(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureKeyIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keyId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       */
      public Builder clearKeyId() {
        keyId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.lang.Object provider_ = "";
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>optional string provider = 3;</code>
       */
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>optional string provider = 3;</code>
       */
      public java.lang.String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            provider_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>optional string provider = 3;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        java.lang.Object ref = provider_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          provider_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>optional string provider = 3;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        provider_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>optional string provider = 3;</code>
       */
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000004);
        provider_ = getDefaultInstance().getProvider();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>optional string provider = 3;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        provider_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString contentId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * A content identifier, specified by content provider.
       * </pre>
       *
       * <code>optional bytes content_id = 4;</code>
       */
      public boolean hasContentId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * A content identifier, specified by content provider.
       * </pre>
       *
       * <code>optional bytes content_id = 4;</code>
       */
      public com.google.protobuf.ByteString getContentId() {
        return contentId_;
      }
      /**
       * <pre>
       * A content identifier, specified by content provider.
       * </pre>
       *
       * <code>optional bytes content_id = 4;</code>
       */
      public Builder setContentId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        contentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A content identifier, specified by content provider.
       * </pre>
       *
       * <code>optional bytes content_id = 4;</code>
       */
      public Builder clearContentId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        contentId_ = getDefaultInstance().getContentId();
        onChanged();
        return this;
      }

      private java.lang.Object trackTypeDeprecated_ = "";
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>optional string track_type_deprecated = 5;</code>
       */
      public boolean hasTrackTypeDeprecated() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>optional string track_type_deprecated = 5;</code>
       */
      public java.lang.String getTrackTypeDeprecated() {
        java.lang.Object ref = trackTypeDeprecated_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            trackTypeDeprecated_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>optional string track_type_deprecated = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTrackTypeDeprecatedBytes() {
        java.lang.Object ref = trackTypeDeprecated_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trackTypeDeprecated_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>optional string track_type_deprecated = 5;</code>
       */
      public Builder setTrackTypeDeprecated(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        trackTypeDeprecated_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>optional string track_type_deprecated = 5;</code>
       */
      public Builder clearTrackTypeDeprecated() {
        bitField0_ = (bitField0_ & ~0x00000010);
        trackTypeDeprecated_ = getDefaultInstance().getTrackTypeDeprecated();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>optional string track_type_deprecated = 5;</code>
       */
      public Builder setTrackTypeDeprecatedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        trackTypeDeprecated_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object policy_ = "";
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>optional string policy = 6;</code>
       */
      public boolean hasPolicy() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>optional string policy = 6;</code>
       */
      public java.lang.String getPolicy() {
        java.lang.Object ref = policy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            policy_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>optional string policy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPolicyBytes() {
        java.lang.Object ref = policy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          policy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>optional string policy = 6;</code>
       */
      public Builder setPolicy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        policy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>optional string policy = 6;</code>
       */
      public Builder clearPolicy() {
        bitField0_ = (bitField0_ & ~0x00000020);
        policy_ = getDefaultInstance().getPolicy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>optional string policy = 6;</code>
       */
      public Builder setPolicyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        policy_ = value;
        onChanged();
        return this;
      }

      private int cryptoPeriodIndex_ ;
      /**
       * <pre>
       *Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>optional uint32 crypto_period_index = 7;</code>
       */
      public boolean hasCryptoPeriodIndex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>optional uint32 crypto_period_index = 7;</code>
       */
      public int getCryptoPeriodIndex() {
        return cryptoPeriodIndex_;
      }
      /**
       * <pre>
       *Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>optional uint32 crypto_period_index = 7;</code>
       */
      public Builder setCryptoPeriodIndex(int value) {
        bitField0_ |= 0x00000040;
        cryptoPeriodIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>optional uint32 crypto_period_index = 7;</code>
       */
      public Builder clearCryptoPeriodIndex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cryptoPeriodIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString groupedLicense_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>optional bytes grouped_license = 8;</code>
       */
      public boolean hasGroupedLicense() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>optional bytes grouped_license = 8;</code>
       */
      public com.google.protobuf.ByteString getGroupedLicense() {
        return groupedLicense_;
      }
      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>optional bytes grouped_license = 8;</code>
       */
      public Builder setGroupedLicense(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        groupedLicense_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>optional bytes grouped_license = 8;</code>
       */
      public Builder clearGroupedLicense() {
        bitField0_ = (bitField0_ & ~0x00000080);
        groupedLicense_ = getDefaultInstance().getGroupedLicense();
        onChanged();
        return this;
      }

      private int protectionScheme_ ;
      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
       * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
       * </pre>
       *
       * <code>optional uint32 protection_scheme = 9;</code>
       */
      public boolean hasProtectionScheme() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
       * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
       * </pre>
       *
       * <code>optional uint32 protection_scheme = 9;</code>
       */
      public int getProtectionScheme() {
        return protectionScheme_;
      }
      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
       * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
       * </pre>
       *
       * <code>optional uint32 protection_scheme = 9;</code>
       */
      public Builder setProtectionScheme(int value) {
        bitField0_ |= 0x00000100;
        protectionScheme_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES­CTR), 'cbc1' (AES­CBC),
       * 'cens' (AES­CTR subsample), 'cbcs' (AES­CBC subsample).
       * </pre>
       *
       * <code>optional uint32 protection_scheme = 9;</code>
       */
      public Builder clearProtectionScheme() {
        bitField0_ = (bitField0_ & ~0x00000100);
        protectionScheme_ = 0;
        onChanged();
        return this;
      }

      private int cryptoPeriodSeconds_ ;
      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>optional uint32 crypto_period_seconds = 10;</code>
       */
      public boolean hasCryptoPeriodSeconds() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>optional uint32 crypto_period_seconds = 10;</code>
       */
      public int getCryptoPeriodSeconds() {
        return cryptoPeriodSeconds_;
      }
      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>optional uint32 crypto_period_seconds = 10;</code>
       */
      public Builder setCryptoPeriodSeconds(int value) {
        bitField0_ |= 0x00000200;
        cryptoPeriodSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>optional uint32 crypto_period_seconds = 10;</code>
       */
      public Builder clearCryptoPeriodSeconds() {
        bitField0_ = (bitField0_ & ~0x00000200);
        cryptoPeriodSeconds_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:WidevineCencHeader)
    }

    // @@protoc_insertion_point(class_scope:WidevineCencHeader)
    private static final WidevineCencHeaderProto.WidevineCencHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WidevineCencHeaderProto.WidevineCencHeader();
    }

    public static WidevineCencHeaderProto.WidevineCencHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WidevineCencHeader>
        PARSER = new com.google.protobuf.AbstractParser<WidevineCencHeader>() {
      public WidevineCencHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WidevineCencHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WidevineCencHeader> getParserForType() {
      return PARSER;
    }

    public WidevineCencHeaderProto.WidevineCencHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WidevineCencHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WidevineCencHeader_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035WidevineCencHeaderProto.proto\"\305\002\n\022Wide" +
      "vineCencHeader\0220\n\talgorithm\030\001 \001(\0162\035.Wide" +
      "vineCencHeader.Algorithm\022\016\n\006key_id\030\002 \003(\014" +
      "\022\020\n\010provider\030\003 \001(\t\022\022\n\ncontent_id\030\004 \001(\014\022\035" +
      "\n\025track_type_deprecated\030\005 \001(\t\022\016\n\006policy\030" +
      "\006 \001(\t\022\033\n\023crypto_period_index\030\007 \001(\r\022\027\n\017gr" +
      "ouped_license\030\010 \001(\014\022\031\n\021protection_scheme" +
      "\030\t \001(\r\022\035\n\025crypto_period_seconds\030\n \001(\r\"(\n" +
      "\tAlgorithm\022\017\n\013UNENCRYPTED\020\000\022\n\n\006AESCTR\020\001B" +
      "\002H\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_WidevineCencHeader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_WidevineCencHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WidevineCencHeader_descriptor,
        new java.lang.String[] { "Algorithm", "KeyId", "Provider", "ContentId", "TrackTypeDeprecated", "Policy", "CryptoPeriodIndex", "GroupedLicense", "ProtectionScheme", "CryptoPeriodSeconds", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
